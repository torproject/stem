# Testing Configuration
#
# The following contains customizable configuration information for stem's
# testing framework.
#
# integ.test_directory
#   Path used for our data directory and any temporary test resources. Relative
#   paths are expanded in reference to the location of 'run_tests.py'.
#   
#   If set then the directory's contents are reused for future tests (so we
#   have a faster startup and lower load on authorities). If set to an empty
#   value then this makes a fresh data directory for each test run.
#
# integ.log
#   Path runtime logs are placed. Relative paths are expanded in reference to
#   'run_tests.py'. Logging is disabled if set ot an empty value.

integ.test_directory ./test/data
exclude_paths .*/stem/test/data/.*
integ.log ./test/data/log

# The following are less testing framework attributes that aren't as commonly
# reconfigured.
#
# msg.*
#   Rendered text.
#
# target.*
#   Attributes of the integration testing targets. This helps determine what is
#   ran when the user runs with '--target'.

msg.help
|Usage run_tests.py [OPTION]
|Runs tests for the stem library.
|
|  -a, --all             runs unit, integ, and style checks (same as '-ui')
|  -u, --unit            runs unit tests
|  -i, --integ           runs integration tests
|  -t, --target TARGET   comma separated list of extra targets for integ tests
|      --test TEST_NAME  only run tests modules containing the given name
|  -l, --log RUNLEVEL    includes logging output with test results, runlevels:
|                          TRACE, DEBUG, INFO, NOTICE, WARN, ERROR
|      --tor PATH        custom tor binary to run testing against
|  -q, --quiet           limits test output to failures only
|  -v, --verbose         provides additional test output
|  -h, --help            presents this help
|
|  Examples:
|   run_tests.py --unit --integ
|     Run unit and integration tests.
|
|   run_tests.py --integ --target RUN_ALL
|     Run integration tests against all tor configurations.
|
|   run_tests.py --integ --test test.integ.util
|     Only run integration tests for the util modules.
|
|  Integration targets:

 ##################
# CATEGORY: TARGET #
 ##################

# The '--help' description of the target.

target.description ONLINE       => Includes tests that require network activity.
target.description RELATIVE     => Uses a relative path for tor's data directory.
target.description CHROOT       => Simulates a chroot setup.
target.description RUN_NONE     => Configuration without a way for controllers to connect.
target.description RUN_OPEN     => Configuration with an open control port (default).
target.description RUN_PASSWORD => Configuration with password authentication.
target.description RUN_COOKIE   => Configuration with an authentication cookie.
target.description RUN_MULTIPLE => Configuration with both password and cookie authentication.
target.description RUN_SOCKET   => Configuration with a control socket.
target.description RUN_SCOOKIE  => Configuration with a control socket and authentication cookie.
target.description RUN_PTRACE   => Configuration with an open control port and 'DisableDebuggerAttachment 0'
target.description RUN_ALL      => Runs integration tests for all connection configurations.

# Torrc configuration options included with the target. Having this option set
# means that each of these targets will have a dedicated integration test run.

target.torrc RUN_NONE     => 
target.torrc RUN_OPEN     => PORT
target.torrc RUN_PASSWORD => PORT, PASSWORD
target.torrc RUN_COOKIE   => PORT, COOKIE
target.torrc RUN_MULTIPLE => PORT, PASSWORD, COOKIE
target.torrc RUN_SOCKET   => SOCKET
target.torrc RUN_SCOOKIE  => SOCKET, COOKIE
target.torrc RUN_PTRACE   => PORT, PTRACE

# Pycodestyle compliance issues that we're ignoreing...
#
# * E251 no spaces around keyword / parameter equals
#
#   This one I dislike a great deal. It makes keyword arguments different
#   from assignments which looks... aweful. I'm not sure what Pycodestyle's
#   author was on when he wrote this one but it's stupid.
#
#   Someone else can change this if they really care.
#
# * E501 line is over 79 characters
#
#   We're no longer on TTY terminals. Overly constraining line length makes
#   things far less readable, encouraging bad practices like abbreviated
#   variable names.
#
#   If the code fits on my tiny netbook screen then it's narrow enough.
#
# * E111, E114, and E121 four space indentations
#
#   Ahhh, indentation. The holy war that'll never die. Sticking with two
#   space indentations since it leads to shorter lines.
#
# * E127 and E131 continuation line over-indented for visual indent
#
#   Pycodestyle only works with this one if we have four space indents (its
#   detection is based on multiples of four).
#
# * E722 do not use bare except
#
#   Iirc they advise against this because it catches KeyboardInterrups and
#   interpreter termination. That's a fair concern, but on the other hand we
#   don't have strong assurance that socket errors and the like will be caught
#   without it. We've been doing this for years without issue but I'd be
#   ameanable to a patch if this causes issues for someone.

pycodestyle.ignore E111
pycodestyle.ignore E114
pycodestyle.ignore E121
pycodestyle.ignore E501
pycodestyle.ignore E251
pycodestyle.ignore E127
pycodestyle.ignore E131
pycodestyle.ignore E722

pycodestyle.ignore stem/__init__.py => E402: import stem.util.connection
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.server_descriptor
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.extrainfo_descriptor
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.networkstatus
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.microdescriptor
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.tordnsel
pycodestyle.ignore stem/descriptor/__init__.py => E402: import stem.descriptor.hidden_service_descriptor
pycodestyle.ignore test/unit/util/connection.py => W291: _tor     tor        15843   10 pipe 0x0 state:
pycodestyle.ignore test/unit/util/connection.py => W291: _tor     tor        15843   11 pipe 0x0 state:

# False positives from pyflakes. These are mappings between the path and the
# issue.

pyflakes.ignore run_tests.py => 'unittest' imported but unused
pyflakes.ignore stem/client/datatype.py => redefinition of unused 'pop' from *
pyflakes.ignore stem/control.py => undefined name 'controller'
pyflakes.ignore stem/interpreter/__init__.py => undefined name 'raw_input'
pyflakes.ignore stem/manual.py => undefined name 'unichr'
pyflakes.ignore stem/prereq.py => 'int_to_bytes' imported but unused
pyflakes.ignore stem/prereq.py => 'int_from_bytes' imported but unused
pyflakes.ignore stem/prereq.py => 'default_backend' imported but unused
pyflakes.ignore stem/prereq.py => 'load_der_public_key' imported but unused
pyflakes.ignore stem/prereq.py => 'modes' imported but unused
pyflakes.ignore stem/prereq.py => 'Cipher' imported but unused
pyflakes.ignore stem/prereq.py => 'algorithms' imported but unused
pyflakes.ignore stem/prereq.py => 'unittest' imported but unused
pyflakes.ignore stem/prereq.py => 'unittest.mock' imported but unused
pyflakes.ignore stem/prereq.py => 'long_to_bytes' imported but unused
pyflakes.ignore stem/prereq.py => 'encoding' imported but unused
pyflakes.ignore stem/prereq.py => 'signing' imported but unused
pyflakes.ignore stem/prereq.py => 'sqlite3' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.utils.int_to_bytes' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.utils.int_from_bytes' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.hazmat.backends.default_backend' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.hazmat.primitives.serialization.load_der_public_key' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.hazmat.primitives.ciphers.modes' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.hazmat.primitives.ciphers.Cipher' imported but unused
pyflakes.ignore stem/prereq.py => 'cryptography.hazmat.primitives.ciphers.algorithms' imported but unused
pyflakes.ignore stem/prereq.py => 'lzma' imported but unused
pyflakes.ignore stem/prereq.py => 'nacl.encoding' imported but unused
pyflakes.ignore stem/prereq.py => 'nacl.signing' imported but unused
pyflakes.ignore stem/response/events.py => undefined name 'long'
pyflakes.ignore stem/util/__init__.py => undefined name 'long'
pyflakes.ignore stem/util/__init__.py => undefined name 'unicode'
pyflakes.ignore stem/util/conf.py => undefined name 'unicode'
pyflakes.ignore stem/util/test_tools.py => 'pyflakes' imported but unused
pyflakes.ignore stem/util/test_tools.py => 'pycodestyle' imported but unused
pyflakes.ignore test/unit/descriptor/reader.py => 'bz2' imported but unused
pyflakes.ignore test/unit/response/events.py => 'from stem import *' used; unable to detect undefined names
pyflakes.ignore test/unit/response/events.py => *may be undefined, or defined from star imports: stem
pyflakes.ignore stem/util/str_tools.py => undefined name 'unicode'
pyflakes.ignore test/__init__.py => undefined name 'test'

# Test modules we want to run. Modules are roughly ordered by the dependencies
# so the lowest level tests come first. This is because a problem in say,
# controller message parsing, will cause all higher level tests to fail too.
# Hence we want the test that most narrowly exhibits problems to come first.

test.unit_tests
|test.unit.util.enum.TestEnum
|test.unit.util.connection.TestConnection
|test.unit.util.conf.TestConf
|test.unit.util.log.TestLog
|test.unit.util.proc.TestProc
|test.unit.util.str_tools.TestStrTools
|test.unit.util.system.TestSystem
|test.unit.util.term.TestTerminal
|test.unit.util.tor_tools.TestTorTools
|test.unit.util.__init__.TestBaseUtil
|test.unit.installation.TestInstallation
|test.unit.descriptor.export.TestExport
|test.unit.descriptor.reader.TestDescriptorReader
|test.unit.descriptor.remote.TestDescriptorDownloader
|test.unit.descriptor.server_descriptor.TestServerDescriptor
|test.unit.descriptor.extrainfo_descriptor.TestExtraInfoDescriptor
|test.unit.descriptor.microdescriptor.TestMicrodescriptor
|test.unit.descriptor.router_status_entry.TestRouterStatusEntry
|test.unit.descriptor.tordnsel.TestTorDNSELDescriptor
|test.unit.descriptor.networkstatus.directory_authority.TestDirectoryAuthority
|test.unit.descriptor.networkstatus.key_certificate.TestKeyCertificate
|test.unit.descriptor.networkstatus.document_v2.TestNetworkStatusDocument
|test.unit.descriptor.networkstatus.document_v3.TestNetworkStatusDocument
|test.unit.descriptor.networkstatus.bridge_document.TestBridgeNetworkStatusDocument
|test.unit.descriptor.hidden_service_descriptor.TestHiddenServiceDescriptor
|test.unit.descriptor.certificate.TestEd25519Certificate
|test.unit.exit_policy.rule.TestExitPolicyRule
|test.unit.exit_policy.policy.TestExitPolicy
|test.unit.endpoint.TestEndpoint
|test.unit.version.TestVersion
|test.unit.manual.TestManual
|test.unit.directory.authority.TestAuthority
|test.unit.directory.fallback.TestFallback
|test.unit.tutorial.TestTutorial
|test.unit.tutorial_examples.TestTutorialExamples
|test.unit.response.add_onion.TestAddOnionResponse
|test.unit.response.control_message.TestControlMessage
|test.unit.response.control_line.TestControlLine
|test.unit.response.events.TestEvents
|test.unit.response.getinfo.TestGetInfoResponse
|test.unit.response.getconf.TestGetConfResponse
|test.unit.response.singleline.TestSingleLineResponse
|test.unit.response.authchallenge.TestAuthChallengeResponse
|test.unit.response.protocolinfo.TestProtocolInfoResponse
|test.unit.response.mapaddress.TestMapAddressResponse
|test.unit.client.size.TestSize
|test.unit.client.address.TestAddress
|test.unit.client.certificate.TestCertificate
|test.unit.client.kdf.TestKDF
|test.unit.client.cell.TestCell
|test.unit.connection.authentication.TestAuthenticate
|test.unit.connection.connect.TestConnect
|test.unit.control.controller.TestControl
|test.unit.interpreter.arguments.TestArgumentParsing
|test.unit.interpreter.autocomplete.TestAutocompletion
|test.unit.interpreter.help.TestHelpResponses
|test.unit.interpreter.commands.TestInterpreterCommands
|test.unit.doctest.TestDocumentation

test.integ_tests
|test.integ.util.conf.TestConf
|test.integ.util.connection.TestConnection
|test.integ.util.proc.TestProc
|test.integ.util.system.TestSystem
|test.integ.interpreter.TestInterpreter
|test.integ.version.TestVersion
|test.integ.manual.TestManual
|test.integ.directory.authority.TestAuthority
|test.integ.directory.fallback.TestFallback
|test.integ.client.connection.TestConnection
|test.integ.response.protocolinfo.TestProtocolInfo
|test.integ.socket.control_socket.TestControlSocket
|test.integ.socket.control_message.TestControlMessage
|test.integ.connection.authentication.TestAuthenticate
|test.integ.connection.connect.TestConnect
|test.integ.control.base_controller.TestBaseController
|test.integ.control.controller.TestController
|test.integ.descriptor.remote.TestDescriptorDownloader
|test.integ.descriptor.server_descriptor.TestServerDescriptor
|test.integ.descriptor.extrainfo_descriptor.TestExtraInfoDescriptor
|test.integ.descriptor.microdescriptor.TestMicrodescriptor
|test.integ.descriptor.networkstatus.TestNetworkStatus
|test.integ.installation.TestInstallation
|test.integ.process.TestProcess

